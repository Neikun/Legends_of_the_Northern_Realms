-- This file has been generated by Dungeon Editor 1.3.6

--- level 1 ---

mapName("Unnamed")
setWallSet("dungeon")
playStream("assets/samples/music/dungeon_ambient.ogg")
mapDesc([[
.###############################
################################
################################
################################
######.#########################
###.......######################
###.......######################
###.......######################
###.......######################
######.#########################
######.#########################
######.#########################
######.#########################
######.#########################
################################
################################
################################
################################
################################
################################
################################
######.#########################
######.#########################
######.#########################
######.#########################
######.#########################
##.###.#########################
#......#########################
################################
################################
################################
################################
]])
spawn("script_entity", 0,0,2, "scriptFramework")
	:setSource("--\
-- Initialise the framework\
--\
function init()\
\9spawn(\"LNR Script Framework\", 1, 0, 0, 0):open()\
end\
\
init()\
")
spawn("script_entity", 2,24,0, "scriptQuickExample")
	:setSource("--\
-- Example of the Dialog.quickDialog() function\
-- \
-- It enables you to start a dialog with a close button by starting one function.\
-- Tip: use [[ and ]] to define a multiple-line-string.\
--\
\
function press()\
\9Dialog.quickDialog([[This is an example of the dialog system.\
\
Features:\
 - Grimrock style interface\
 - Automatically resizing window and buttons\
 - Text appears on screen, as if being told\
 - Optional portrait of npc you talk to\
\
Check the wiki for more info how to use it,\
But first see if you can get out of here...]])\
end\
")
spawn("wall_button", 2,26,0, "wall_button_1")
	:addConnector("toggle", "scriptQuickExample", "press")
spawn("ogre", 5,27,3, "npc_guard")
	:setAIState("guard")
spawn("script_entity", 7,27,2, "scriptVerboseExample")
	:setSource("--\
-- Example on how to build your own dialog\
-- \
-- This example uses all features:\
--  * Shows portrait of the npc\
--  * Defines buttons with custom text\
--  * Uses a callback function to process the result\
--\
\
s_challenge = \"Right, make me!\"\
\
function clickOgre()\
\9local s_npcId = \"npc_guard\"\
\9local s_text = [[Hey, you!\
\9\9\9\9\9What are you doing here?\
\
\9\9\9\9\9You're not supposed to be here.\
\9\9\9\9\9Leave while you can!]]\
\9\
\9local s_dlgId = Dialog.new(s_text, \"I'm going already!\", s_npcId)\
\9Dialog.addButton(s_dlgId, s_challenge)\
\9Dialog.activate(s_dlgId, scriptVerboseExample.ogreCallBack)\
end\
\
function ogreCallBack(s_caption)\
\9if s_caption == s_challenge then\
\9\9hudPrint(\"Oh oh... Now you've done it!\")\
\9\9if b_lifeSaver then\
\9\9\9pp_challenge:destroy()\
\9\9\9b_lifeSaver:destroy()\
\9\9end\
\9end\
end\
")
spawn("pressure_plate_hidden", 4,27,3, "pp_challenge")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "scriptVerboseExample", "clickOgre")
spawn("blocker", 4,27,2, "b_lifeSaver")
spawn("script_entity", 7,25,2, "scriptQuickYesNoExample")
	:setSource("function press()\
\9Travel.start(4, 5)\
end\
")
spawn("script_entity", 0,27,1, "scriptInit")
	:setSource("function initNPC()\
\9NPC.Create(\"npc_guard\")\
\9NPC.SetAttr(\"npc_guard\", \"Portrait\", \"mod_assets/textures/portraits/ogre.tga\")\
\9NPC.SetAttr(\"npc_guard\", \"Name\", \"Grumpy guard\")\
end\
")
spawn("pressure_plate_hidden", 2,27,2, "ppInit")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setActivateOnce(true)
	:setSilent(true)
	:addConnector("activate", "scriptInit", "initNPC")
spawn("blocker", 6,27,3, "blocker_2")
spawn("dungeon_door_portcullis", 6,27,3, "dungeon_door_portcullis_1")
spawn("dungeon_door_portcullis", 2,27,3, "dungeon_door_portcullis_2")
spawn("lever", 2,26,3, "lever_1")
	:addConnector("any", "dungeon_door_portcullis_2", "toggle")
spawn("iron_key", 6,27,3, "iron_key_1")
spawn("lock", 5,27,0, "lock_1")
	:setOpenedBy("iron_key")
	:addConnector("activate", "dungeon_door_portcullis_1", "open")
spawn("pressure_plate_hidden", 6,25,2, "pressure_plate_hidden_1")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "scriptQuickYesNoExample", "press")
spawn("baked_maggot", 1,27,3, "baked_maggot_1")
spawn("script_entity", 2,0,1, "Travel")
	:setSource("--\
--  All points of interest on the map (and their corresponding location in the dungeon)\
--\
_hPOIs = {\
\9{ name = \"Ormund\", x = 1016, y = 651, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Kalevala\", x = 1382, y = 1114, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Jonli\", x = 1215, y = 1163, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"the Grotto of Xazarra\", x = 1842, y = 798, dungeonLevel = 1, dungeonX = 6, dungeonY = 26, dungeonFacing = 2},\
\9{ name = \"Uttermost\", x = 1903, y = 1079, dungeonLevel = 1, dungeonX = 6, dungeonY = 8, dungeonFacing = 0},\
\9{ name = \"Amaranth\", x = 2264, y = 592, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Thraelm\", x = 2149, y = 1840, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Theareona\", x = 402, y = 1741, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Malan Tael\", x = 1337, y = 1586, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Peca\", x = 389, y = 1999, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Daejon\", x = 521, y = 2106, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Quenfar\", x = 520, y = 2324, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Qegandoc\", x = 1013, y = 2316, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Losancrel\", x = 925, y = 2458, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Conwyn\", x = 1382, y = 2558, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Congam\", x = 1694, y = 2682, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Arfi\", x = 1958, y = 2755, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Ranwyn\", x = 1536, y = 2763, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Nothampton\", x = 1915, y = 3389, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Harbardar\", x = 185, y = 4368, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Basabu\", x = 1934, y = 4379, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Vaeey\", x = 2208, y = 4231, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
\9{ name = \"Sanchi\", x = 2745, y = 4218, dungeonLevel = 1, dungeonX = 0, dungeonY = 0, dungeonFacing = 0},\
}\
\
_iMapWidth = 3181\
_iMapHeight = 4497\
_iDurationStage2 = 5\
\
\
_from = 0\
_to = 0\
_stage = 0\
_start = 0\
_partyEnabled = { true, true, true, true }\
\
function start(from, to)\
\9_from = from\
\9_to = to\
\9Dialog.quickYesNoDialog(\"Are you sure you want to travel to\\n\".._hPOIs[_to].name..\"?\", Travel.startCallback)\
end\
\
function startCallback(s_buttontext)\
\9if string.lower(s_buttontext) == \"yes\" then\
\9\9_start = getStatistic(\"play_time\")\
\9\9_stage = 1\
\9\9for i = 1, 4 do\
\9\9\9_partyEnabled[i] = party:getChampion(i):getEnabled()\
\9\9\9party:getChampion(i):setEnabled(false)\
\9\9end\
\9end\
end\
\
\
function onDraw(ctx)\
\9--[[\
\9\9For performance: extra check if we're doing anything. \
\9\9If not then it was just a simple if-statement wasted.\
\9--]]\
\9if _stage ~= 0 then\
\9\9local partyOffsetX = ctx.width / 2\
\9\9local partyOffsetY = ctx.height / 2\
\9\9local mapOffsetX = (ctx.width / 2) - _hPOIs[_from].x\
\9\9local mapOffsetY = (ctx.height / 2) - _hPOIs[_from].y\
\9\9local pct = 0\
\9\9local alpha = 255\
\9\9local delta = getStatistic(\"play_time\") - _start\
\
\9\9-- Do stage specific stuff\
\9\9if _stage == 1 then\
\9\9\9if delta <= 1 then\
\9\9\9\9alpha = 255 * delta\
\9\9\9else\
\9\9\9\9alpha = 255\
\9\9\9end\
\9\9end\
\
\9\9if _stage == 2 then\
\9\9\9pct = delta / _iDurationStage2\
\9\9end\
\9\9\
\9\9if _stage == 3 then\
\9\9\9pct = 1\
\9\9\9if delta <= 1 then\
\9\9\9\9alpha = 255 - 255 * delta\
\9\9\9else\
\9\9\9\9alpha = 0\
\9\9\9end\
\9\9end\
\9\9\
\9\9-- Calculate map offset (moving and non-moving)\
\9\9mapOffsetX = mapOffsetX - (_hPOIs[_to].x - _hPOIs[_from].x) * pct\
\9\9mapOffsetY = mapOffsetY - (_hPOIs[_to].y - _hPOIs[_from].y) * pct\
\
\9\9-- Compensate for corners\
\9\9if mapOffsetX > 0 then\
\9\9\9partyOffsetX = partyOffsetX - mapOffsetX\
\9\9\9mapOffsetX = 0\
\9\9end\9\9\
\9\9if mapOffsetY > 0 then\
\9\9\9partyOffsetY = partyOffsetY - mapOffsetY\
\9\9\9mapOffsetY = 0\
\9\9end\
\9\9if mapOffsetX < - _iMapWidth + ctx.width then\
\9\9\9partyOffsetX = partyOffsetX + (- _iMapWidth + ctx.width - mapOffsetX)\
\9\9\9mapOffsetX = - _iMapWidth + ctx.width\
\9\9end\
\9\9if mapOffsetY < - _iMapHeight + ctx.height then\
\9\9\9partyOffsetY = partyOffsetY + (- _iMapHeight + ctx.height - mapOffsetY)\
\9\9\9mapOffsetY = - _iMapHeight + ctx.height\
\9\9end\
\
\9\9-- Draw the map\
\9\9ctx.color(0, 0, 0, alpha)\
\9\9ctx.drawRect(0, 0, ctx.width, ctx.height)\
\9\9ctx.color(255, 255, 255, alpha)\
\9\9ctx.drawImage(\"mod_assets/textures/map.tga\", mapOffsetX, mapOffsetY)\
\9\9ctx.drawImage(\"mod_assets/textures/party.tga\", partyOffsetX - 20, partyOffsetY - 20)\
\
\9\9-- Check for stage transitions\
\9\9if _stage == 1 and delta >= 1 then\
\9\9\9_start = getStatistic(\"play_time\")\
\9\9\9_stage = 2\
\9\9\9party:setPosition(0, 0, 0, 1)\
\9\9else\
\9\9\9if _stage == 2 and delta >= _iDurationStage2 then\
\9\9\9\9_start = getStatistic(\"play_time\")\
\9\9\9\9_stage = 3\
\9\9\9\9party:setPosition(_hPOIs[_to].dungeonX, _hPOIs[_to].dungeonY, _hPOIs[_to].dungeonFacing, _hPOIs[_to].dungeonLevel)\
\9\9\9else\9\9\9\9\
\9\9\9\9if _stage == 3 and delta >= 1 then\
\9\9\9\9\9_stage = 0\
\9\9\9\9\9for i = 1, 4 do\
\9\9\9\9\9\9party:getChampion(i):setEnabled(_partyEnabled[i])\
\9\9\9\9\9end\
\9\9\9\9\9hudPrint(\"You arrive in \".._hPOIs[_to].name)\
\9\9\9\9end\
\9\9\9end\
\9\9end\9\9\
\9end\
end\
")
spawn("torch_holder", 5,5,0, "torch_holder_1")
	:addTorch()
spawn("torch_holder", 7,5,0, "torch_holder_2")
	:addTorch()
spawn("dungeon_door_wooden", 6,5,0, "dungeon_door_wooden_1")
spawn("barrel_crate_block", 3,7,3, "barrel_crate_block_1")
spawn("barrel_crate_block", 4,8,0, "barrel_crate_block_2")
spawn("barrel_crate_block", 3,8,1, "barrel_crate_block_3")
spawn("barrel_crate_block", 3,5,1, "barrel_crate_block_4")
spawn("barrel_crate_block", 9,5,2, "barrel_crate_block_5")
spawn("pressure_plate_hidden", 6,9,2, "pressure_plate_hidden_2")
	:setTriggeredByParty(true)
	:setTriggeredByMonster(false)
	:setTriggeredByItem(false)
	:setSilent(true)
	:addConnector("activate", "script_entity_1", "press")
spawn("script_entity", 7,9,1, "script_entity_1")
	:setSource("function press()\
\9Travel.start(5, 4)\
end\
")
spawn("starting_location", 2,26,0, "starting_location")
